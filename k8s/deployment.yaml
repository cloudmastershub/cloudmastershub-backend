# CloudMastersHub Backend Deployment
# This file should be placed in: k8s/deployment.yaml in your backend repository

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudmastershub-backend
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
    environment: dev
    version: "1.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudmastershub
      tier: backend
  template:
    metadata:
      labels:
        app: cloudmastershub
        tier: backend
        environment: dev
    spec:
      serviceAccountName: cloudmastershub-backend-sa
      containers:
      - name: backend
        image: cloudmastershub/cloudmastershub-backend:latest  # This will be updated by Jenkins
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: TIER
          value: "backend"
        - name: ENVIRONMENT
          value: "dev"
        - name: API_DOMAIN
          value: "api.cloudmastershub.com"
        - name: FRONTEND_URL
          value: "https://cloudmastershub.com"
        - name: CORS_ORIGINS
          value: "https://cloudmastershub.com"
        - name: PORT
          value: "5000"
        - name: NODE_ENV
          value: "production"
        # Database connections (using internal cluster DNS)
        - name: MONGODB_URL
          value: "mongodb://mongodb.cloudmastershub-dev.svc.cluster.local:27017/cloudmastershub"
        - name: REDIS_URL
          value: "redis://redis.cloudmastershub-dev.svc.cluster.local:6379"
        # Secrets from Kubernetes Secret
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: jwt-secret
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: api-key
        # ConfigMap values
        envFrom:
        - configMapRef:
            name: cloudmastershub-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: dockerhub-secret  # If using private Docker registry
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: cloudmastershub-backend
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
spec:
  type: ClusterIP
  selector:
    app: cloudmastershub
    tier: backend
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http
  sessionAffinity: None

---
# HorizontalPodAutoscaler for automatic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudmastershub-backend-hpa
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudmastershub-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60