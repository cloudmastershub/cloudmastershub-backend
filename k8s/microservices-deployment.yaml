# CloudMastersHub Microservices Deployments
# Updated to match the actual microservices architecture

---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: cloudmastershub-dev
  labels:
    name: cloudmastershub-dev
    environment: development

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudmastershub-backend-sa
  namespace: cloudmastershub-dev

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudmastershub-api-gateway
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
    service: api-gateway
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudmastershub
      service: api-gateway
  template:
    metadata:
      labels:
        app: cloudmastershub
        tier: backend
        service: api-gateway
        environment: dev
    spec:
      serviceAccountName: cloudmastershub-backend-sa
      containers:
      - name: api-gateway
        image: mbuaku/cloudmastershub-backend:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: SERVICE_NAME
          value: "api-gateway"
        - name: PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        - name: USER_SERVICE_URL
          value: "http://cloudmastershub-user-service.cloudmastershub-dev.svc.cluster.local:3001"
        - name: COURSE_SERVICE_URL
          value: "http://cloudmastershub-course-service.cloudmastershub-dev.svc.cluster.local:3002"
        - name: LAB_SERVICE_URL
          value: "http://cloudmastershub-lab-service.cloudmastershub-dev.svc.cluster.local:3003"
        - name: ALLOWED_ORIGINS
          value: "https://cloudmastershub.com,https://www.cloudmastershub.com,https://api.cloudmastershub.com"
        envFrom:
        - configMapRef:
            name: cloudmastershub-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: cloudmastershub-api-gateway
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    service: api-gateway
spec:
  type: ClusterIP
  selector:
    app: cloudmastershub
    service: api-gateway
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http

---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudmastershub-user-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
    service: user-service
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudmastershub
      service: user-service
  template:
    metadata:
      labels:
        app: cloudmastershub
        tier: backend
        service: user-service
        environment: dev
    spec:
      serviceAccountName: cloudmastershub-backend-sa
      containers:
      - name: user-service
        image: mbuaku/cloudmastershub-backend:latest
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: SERVICE_NAME
          value: "user-service"
        - name: PORT
          value: "3001"
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres.cloudmastershub-dev.svc.cluster.local:5432/cloudmastershub_users"
        - name: REDIS_URL
          value: "redis://redis.cloudmastershub-dev.svc.cluster.local:6379"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: jwt-secret
        envFrom:
        - configMapRef:
            name: cloudmastershub-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# User Service
apiVersion: v1
kind: Service
metadata:
  name: cloudmastershub-user-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    service: user-service
spec:
  type: ClusterIP
  selector:
    app: cloudmastershub
    service: user-service
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http

---
# Course Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudmastershub-course-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
    service: course-service
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudmastershub
      service: course-service
  template:
    metadata:
      labels:
        app: cloudmastershub
        tier: backend
        service: course-service
        environment: dev
    spec:
      serviceAccountName: cloudmastershub-backend-sa
      containers:
      - name: course-service
        image: mbuaku/cloudmastershub-backend:latest
        ports:
        - containerPort: 3002
          name: http
        env:
        - name: SERVICE_NAME
          value: "course-service"
        - name: PORT
          value: "3002"
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          value: "mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb.cloudmastershub-dev.svc.cluster.local:27017/cloudmastershub_courses"
        - name: REDIS_URL
          value: "redis://redis.cloudmastershub-dev.svc.cluster.local:6379"
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: mongodb-password
        envFrom:
        - configMapRef:
            name: cloudmastershub-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# Course Service
apiVersion: v1
kind: Service
metadata:
  name: cloudmastershub-course-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    service: course-service
spec:
  type: ClusterIP
  selector:
    app: cloudmastershub
    service: course-service
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
    name: http

---
# Lab Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudmastershub-lab-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    tier: backend
    service: lab-service
    environment: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cloudmastershub
      service: lab-service
  template:
    metadata:
      labels:
        app: cloudmastershub
        tier: backend
        service: lab-service
        environment: dev
    spec:
      serviceAccountName: cloudmastershub-backend-sa
      containers:
      - name: lab-service
        image: mbuaku/cloudmastershub-backend:latest
        ports:
        - containerPort: 3003
          name: http
        env:
        - name: SERVICE_NAME
          value: "lab-service"
        - name: PORT
          value: "3003"
        - name: NODE_ENV
          value: "production"
        - name: REDIS_HOST
          value: "redis.cloudmastershub-dev.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: aws-access-key
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: cloudmastershub-secrets
              key: aws-secret-key
              optional: true
        - name: AWS_REGION
          value: "us-east-1"
        envFrom:
        - configMapRef:
            name: cloudmastershub-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
# Lab Service
apiVersion: v1
kind: Service
metadata:
  name: cloudmastershub-lab-service
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
    service: lab-service
spec:
  type: ClusterIP
  selector:
    app: cloudmastershub
    service: lab-service
  ports:
  - port: 3003
    targetPort: 3003
    protocol: TCP
    name: http

---
# Ingress for API Gateway (external access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloudmastershub-ingress
  namespace: cloudmastershub-dev
  labels:
    app: cloudmastershub
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://cloudmastershub.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  tls:
  - hosts:
    - api.cloudmastershub.com
    secretName: cloudmastershub-tls
  rules:
  - host: api.cloudmastershub.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cloudmastershub-api-gateway
            port:
              number: 3000
